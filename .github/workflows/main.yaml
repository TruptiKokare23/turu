name: Deploy to ECR

on:
 
  push:
    branches: [ main ]

jobs:
  
  build:
    
    name: Build Image
    runs-on: ubuntu-latest

    outputs:
      DOCKER_IMAGE_DIGEST: ${{ steps.docker-image-digest.outputs.DOCKER_IMAGE_DIGEST }}
      
    steps:

    - name: Check out code
      uses: actions/checkout@v2
       
        
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-2

#     - name: Login to Amazon ECR
#       id: login-ecr
#       uses: aws-actions/amazon-ecr-login@v1
      

#     - name: Build, tag, and push image to Amazon ECR
#       env:
#         ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#         ECR_REPOSITORY: "arc"
        
#       run: |
#         docker buildx build -t ${{env.ECR_REGISTRY}}/${{env.ECR_REPOSITORY}} -f ./Dockerfile .
#         docker push ${{ steps.login-ecr.outputs.registry }}/${{env.ECR_REPOSITORY}}
#         # Apply configuration to cluster
#         export KUBECONFIG="${RUNNER_TEMP}/.kube/config"
#         kustomize edit set image ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.eu-west-2.amazonaws.com/arc:latest
#         kustomize build . | kubectl apply -f -
        
        
        
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: deploy to cluster
      uses: kodermax/kubectl-aws-eks@master
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: arc
        IMAGE_TAG: ${{ github.sha }}
      with:
        args: set image 080846062325.dkr.ecr.eu-west-2.amazonaws.com/arc
